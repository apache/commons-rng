<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-rng-examples</artifactId>
    <version>1.4</version>
  </parent>

  <artifactId>commons-rng-examples-jmh</artifactId>
  <version>1.4</version>
  <name>Apache Commons RNG JMH Benchmark</name>

  <description>Code for running JMH benchmarks that assess the performance of the generators.
  Code in this module is not part of the public API.</description>

  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-rng-simple</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-rng-sampling</artifactId>
    </dependency>

    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <version>${jmh.version}</version>
    </dependency>

    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <version>${jmh.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <version>3.6.1</version>
    </dependency>
  </dependencies>

  <properties>
    <!-- OSGi -->
    <commons.osgi.symbolicName>org.apache.commons.rng.examples.jmh</commons.osgi.symbolicName>
    <commons.osgi.export>org.apache.commons.rng.examples.jmh</commons.osgi.export>
    <!-- Java 9+ -->
    <commons.automatic.module.name>org.apache.commons.rng.examples.jmh</commons.automatic.module.name>
    <!-- Workaround to avoid duplicating config files. -->
    <rng.parent.dir>${basedir}/../..</rng.parent.dir>

    <!-- JMH Benchmark related properties: version, name of the benchmarking uber jar. -->
    <jmh.version>1.32</jmh.version>
    <uberjar.name>examples-jmh</uberjar.name>
    <project.mainClass>org.openjdk.jmh.Main</project.mainClass>
    <!-- Disable analysis for benchmarking code. -->
    <pmd.skip>true</pmd.skip>

    <!-- Skip tests. This avoids the lengthy test of the ziggurat samplers. Override using:
       mvn test -DskipTests=false
    -->
    <skipTests>true</skipTests>
  </properties>

  <profiles>
    <profile>
      <!-- Run a named benchmark from maven. The class to run can be specified as a property
           using -Dbenchmark=[XXX], for example:
           mvn test -Pbenchmark -Dbenchmark=NextDoubleGenerationPerformance
      -->
      <id>benchmark</id>
      <properties>
        <skipTests>true</skipTests>
        <benchmark>org.apache</benchmark>
        <java.cmd>java</java.cmd>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${rng.exec.version}</version>
            <executions>
              <execution>
                <id>benchmark</id>
                <phase>test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <classpathScope>test</classpathScope>
                  <executable>${java.cmd}</executable>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath />
                    <argument>${project.mainClass}</argument>
                    <argument>-rf</argument>
                    <argument>json</argument>
                    <argument>-rff</argument>
                    <argument>target/jmh-result.${benchmark}.json</argument>
                    <argument>${benchmark}</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- Build an executable jar that runs JMH:
           mvn package -Pexamples-jmh

           java -jar target/examples-jmh.jar -h
           java -jar target/examples-jmh.jar NextDoubleGenerationPerformance -rf json -rff out.json
           java -jar target/examples-jmh.jar NextIntGen.*nextInt$ -p randomSourceName=MSWS,PCG_MCG_XSH_RS_32
           java -jar target/examples-jmh.jar ContinuousSamplersPerformance.sample -p samplerType=BoxMullerNormalizedGaussianSampler
      -->
      <id>examples-jmh</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>${rng.shade.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <finalName>${uberjar.name}</finalName>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <mainClass>${project.mainClass}</mainClass>
                    </transformer>
                  </transformers>
                  <filters>
                    <filter>
                      <!-- Shading signed JARs will fail without this. http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar -->
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                        <exclude>LICENSE</exclude>
                        <exclude>THIRD-PARTY</exclude>
                        <exclude>META-INF/LICENSE</exclude>
                        <exclude>META-INF/MANIFEST.MF</exclude>
                        <exclude>META-INF/NOTICE</exclude>
                      </excludes>
                    </filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
